@model LMS.Data.Entities.ClassRoom

@{
    ViewData["Title"] = "Details";
}

<h1 class="card-header"
    style="background: url(@Model.ImageUrl) no-repeat center center; background-size: cover; color: white; line-height: 1.5; font-size: 1.5em; min-height: 200px; display: flex; align-items: flex-end">
    @Model.Name</h1>

<hr>

<div class="row">
    <div class="col-md-3">
        <div class="card shadow-sm">
            <div class="card-header bg-white">
                <span class="font-weight-bold">Class code</span>
                <div class="dropdown float-right">
                    <button class="btn btn-tool btn-sm dropdown-toggle mr-2" type="button" id="dropdownMenuButton"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    </button>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="#" onclick="copyCodeToClipboard('@Model.Code')"><i
                                class="fas fa-copy mr-2"></i>Copy code</a>
                        <a class="dropdown-item" href="#" onclick="changeCode(@Model.Id)"><i
                                class="fas fa-edit mr-2"></i>Change code</a>
                    </div>
                </div>
            </div>
            <h4 class="card-text m-auto pt-3 pb-3">@Html.DisplayFor(model => model.Code)</h4>
        </div>
    </div>
    <div class="col-md-6">

        <input data-toggle="modal" data-target="#postModal" type="text" class="form-control"
            placeholder="Create a new post now">

        <!-- Modal -->
        <div class="modal fade" id="postModal" tabindex="-1" role="dialog" aria-labelledby="postModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="postModalLabel">Create a new post</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form>
                            @Html.AntiForgeryToken()
                            <div class="mb-3">
                                <label for="ClassRoomId" class="form-label">Lớp học</label>
                                <input type="hidden" name="ClassRoomId" value="@Model.Id" />
                            </div>
                            <div class="mb-3">
                                <label for="Title" class="form-label">Tiêu đề</label>
                                <input type="text" id="postTitle" name="Title" class="form-control" />
                            </div>
                            <div class="mb-3">
                                <label for="Content" class="form-label">Nội dung</label>
                                <textarea id="postMessage" name="Message"></textarea>
                            </div>
                            <button type="button" class="btn btn-primary" onclick="createPost()">Post</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3"></div>
</div>

<div>
    <hr />
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        function createPost() {
            var form = $('#postModal form');
            $.ajax({
                url: '@Url.Action("Create", "Posts")',  // URL của phương thức Create
                type: 'POST',
                data: form.serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#postModal').modal('hide');
                        alert(result.message);  // Hiển thị thông báo thành công
                        location.reload();  // Reload trang hoặc cập nhật danh sách bài viết theo yêu cầu
                    }
                },
                error: function () {
                    alert('Có lỗi xảy ra khi tạo bài viết.');
                }
            });
        }

        function copyCodeToClipboard(code) {
            navigator.clipboard.writeText(code).then(function () {
                showToast('Code copied to clipboard!');
            }, function (err) {
                console.error('Could not copy text: ', err);
            });
        }

        function showToast(message) {
            var toast = document.createElement('div');
            toast.className = 'toast';
            toast.innerText = message;
            document.body.appendChild(toast);
            setTimeout(function () {
                toast.classList.add('show');
            }, 100);
            setTimeout(function () {
                toast.classList.remove('show');
                document.body.removeChild(toast);
            }, 3000);
        }

        var editor = new FroalaEditor('#postMessage', {
            toolbarButtons: ['bold', 'italic', 'underline', 'strikeThrough', 'align', 'undo', 'redo'],
            pastePlain: true,
            placeholderText: 'Input your message...',
        });
    </script>
    <style>
        .toast {
            position: fixed;
            bottom: 20px;
            left: 20px;
            background-color: #333;
            color: #fff;
            padding: 10px;
            border-radius: 5px;
            opacity: 0;
            transition: opacity 0.5s, bottom 0.5s;
        }

        .toast.show {
            opacity: 1;
            bottom: 40px;
        }
    </style>
}

