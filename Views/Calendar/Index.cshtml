<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar</title>
    <style>
        /* Modern calendar styling */
        /* Removing body styling to integrate with app */

        h1 {
            text-align: center;
            color: #3f51b5;
            margin-bottom: 20px;
            font-weight: 600;
        }

        .calendar-container {
            max-width: 1000px;
            margin: 0 auto;
            background-color: transparent;
            border-radius: 8px;
            padding: 10px;
            overflow: hidden;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background-color: transparent;
            border-bottom: 1px solid #eaeaea;
            margin-bottom: 15px;
        }

        .calendar-header .month-year {
            font-weight: 600;
            font-size: 1.5em;
            color: #3f51b5;
        }

        .calendar-header .nav-buttons {
            display: flex;
            gap: 12px;
        }

        .calendar-header .prev-next-btn {
            cursor: pointer;
            background-color: #f0f2ff;
            color: #3f51b5;
            border: none;
            padding: 8px 12px;
            font-size: 1.1em;
            border-radius: 8px;
            transition: all 0.2s ease;
        }

        .calendar-header .prev-next-btn:hover {
            background-color: #3f51b5;
            color: white;
        }

        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            grid-gap: 8px;
            margin-top: 15px;
        }

        .day-header {
            text-align: center;
            padding: 10px;
            font-weight: 600;
            color: #3f51b5;
            background-color: #f0f2ff;
            border-radius: 8px;
        }

        .calendar-day {
            text-align: center;
            padding: 15px 10px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.2s ease;
            background-color: white;
            border: 1px solid #eaeaea;
            position: relative;
            min-height: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .calendar-day:hover {
            background-color: #f0f2ff;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .calendar-day.selected {
            background-color: #3f51b5;
            color: white;
            font-weight: 600;
        }

        /* Highlight today's date */
        .calendar-day.today {
            background-color: #e8f5e9;
            color: #2e7d32;
            border: 2px solid #2e7d32;
            font-weight: 600;
        }

        /* Empty calendar day styling */
        .calendar-day.empty {
            background-color: transparent;
            border: 1px dashed #e0e0e0;
            cursor: default;
        }

        .calendar-day.empty:hover {
            transform: none;
            box-shadow: none;
            background-color: transparent;
        }

        /* Event indicator */
        .has-event::after {
            content: '';
            position: absolute;
            bottom: 5px;
            left: 50%;
            transform: translateX(-50%);
            width: 6px;
            height: 6px;
            border-radius: 50%;
            background-color: #ff5722;
        }

        /* Event modal styling */
        .event-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            justify-content: center;
            align-items: center;
            z-index: 1000;
            backdrop-filter: blur(3px);
        }

        .event-modal-content {
            background: white;
            padding: 30px;
            border-radius: 12px;
            width: 400px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            animation: modalFadeIn 0.3s ease;
        }

        @@keyframes modalFadeIn
        {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .event-modal-content h3 {
            margin-top: 0;
            color: #3f51b5;
            border-bottom: 2px solid #f0f2ff;
            padding-bottom: 10px;
            margin-bottom: 20px;
        }

        .event-modal-content input,
        .event-modal-content textarea {
            width: 100%;
            padding: 12px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-family: inherit;
            box-sizing: border-box;
        }

        .event-modal-content input:focus,
        .event-modal-content textarea:focus {
            outline: none;
            border-color: #3f51b5;
            box-shadow: 0 0 0 2px rgba(63, 81, 181, 0.2);
        }

        .event-modal-content textarea {
            min-height: 100px;
            resize: vertical;
        }

        .modal-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 15px;
        }

        .save-btn {
            background: #3f51b5;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            flex-grow: 2;
            margin-right: 10px;
            transition: background-color 0.2s;
        }

        .save-btn:hover {
            background: #303f9f;
        }

        .close-btn {
            background: #f44336;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: background-color 0.2s;
        }

        .close-btn:hover {
            background: #d32f2f;
        }

        /* Selected date indicator in modal */
        .selected-date {
            font-size: 0.9em;
            color: #666;
            margin-bottom: 15px;
        }
    </style>
</head>

<body>
    <div class="calendar-container">
        <!-- Calendar Header -->
        <div class="calendar-header">
            <div class="month-year" id="month-year"></div>
            <div class="nav-buttons">
                <button class="prev-next-btn" id="prev-btn">&lt;</button>
                <button class="prev-next-btn" id="today-btn">Today</button>
                <button class="prev-next-btn" id="next-btn">&gt;</button>
            </div>
        </div>

        <!-- Calendar will be rendered here -->
        <div id="calendar" class="calendar"></div>
    </div>

    <!-- Event Modal -->
    <div id="event-modal" class="event-modal">
        <div class="event-modal-content">
            <h3>Add Event</h3>
            <div class="selected-date" id="selected-date"></div>
            <input type="text" id="event-title" placeholder="Event Title" />
            <textarea id="event-description" placeholder="Event Description"></textarea>
            <div class="modal-buttons">
                <button class="save-btn" id="save-event">Save Event</button>
                <button class="close-btn" id="close-modal">Cancel</button>
            </div>
        </div>
    </div>

    <script>
        // Calendar data
        const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        const daysOfWeek = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        let currentDate = new Date();
        let events = {};

        // Render calendar
        function renderCalendar(month, year) {
            const calendar = document.getElementById('calendar');
            calendar.innerHTML = ''; // Clear previous calendar

            // Update month-year display
            const monthYear = document.getElementById('month-year');
            monthYear.textContent = `${months[month]} ${year}`;

            // Create the day headers
            daysOfWeek.forEach(day => {
                const dayHeader = document.createElement('div');
                dayHeader.classList.add('day-header');
                dayHeader.textContent = day;
                calendar.appendChild(dayHeader);
            });

            // Calculate first day of month and days in month
            const firstDay = new Date(year, month).getDay();
            const daysInMonth = new Date(year, month + 1, 0).getDate();

            // Add empty cells for days before the first day of the month
            for (let i = 0; i < firstDay; i++) {
                const emptyCell = document.createElement('div');
                emptyCell.classList.add('calendar-day', 'empty');
                calendar.appendChild(emptyCell);
            }

            // Add day cells
            for (let day = 1; day <= daysInMonth; day++) {
                const dayCell = document.createElement('div');
                dayCell.classList.add('calendar-day');
                dayCell.textContent = day;

                // Format date string for event lookup
                const dateStr = `${year}-${month + 1}-${day}`;

                // Mark today's date
                const today = new Date();
                if (today.getDate() === day && today.getMonth() === month && today.getFullYear() === year) {
                    dayCell.classList.add('today');
                }

                // Check if day has events
                if (events[dateStr]) {
                    dayCell.classList.add('has-event');
                }

                dayCell.onclick = () => openEventModal(day, month, year);
                calendar.appendChild(dayCell);
            }
        }

        // Event modal functions
        function openEventModal(day, month, year) {
            const modal = document.getElementById('event-modal');
            modal.style.display = 'flex';

            // Set selected date display
            const selectedDate = document.getElementById('selected-date');
            selectedDate.textContent = `Date: ${months[month]} ${day}, ${year}`;

            const saveBtn = document.getElementById('save-event');
            saveBtn.onclick = () => saveEvent(day, month, year);
        }

        function saveEvent(day, month, year) {
            const title = document.getElementById('event-title').value;
            const description = document.getElementById('event-description').value;

            if (title.trim() === '') {
                alert('Please enter an event title');
                return;
            }

            // Format date as a string key
            const dateStr = `${year}-${month + 1}-${day}`;

            // Save event to our events object
            if (!events[dateStr]) {
                events[dateStr] = [];
            }

            events[dateStr].push({
                title: title,
                description: description
            });

            // Re-render calendar to show event indicators
            renderCalendar(currentDate.getMonth(), currentDate.getFullYear());

            // Close modal and reset input fields
            const modal = document.getElementById('event-modal');
            modal.style.display = 'none';
            document.getElementById('event-title').value = '';
            document.getElementById('event-description').value = '';
        }

        // Close modal when clicking the close button
        document.getElementById('close-modal').onclick = () => {
            document.getElementById('event-modal').style.display = 'none';
            document.getElementById('event-title').value = '';
            document.getElementById('event-description').value = '';
        };

        // Close modal when clicking outside the modal content
        window.onclick = (event) => {
            const modal = document.getElementById('event-modal');
            if (event.target === modal) {
                modal.style.display = 'none';
                document.getElementById('event-title').value = '';
                document.getElementById('event-description').value = '';
            }
        };

        // Initialize calendar
        renderCalendar(currentDate.getMonth(), currentDate.getFullYear());

        // Navigation button event listeners
        document.getElementById('prev-btn').onclick = () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            renderCalendar(currentDate.getMonth(), currentDate.getFullYear());
        };

        document.getElementById('next-btn').onclick = () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar(currentDate.getMonth(), currentDate.getFullYear());
        };

        document.getElementById('today-btn').onclick = () => {
            currentDate = new Date();  // Reset to today's date
            renderCalendar(currentDate.getMonth(), currentDate.getFullYear());
        };
    </script>
</body>

</html>
