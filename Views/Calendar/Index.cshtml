@* <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar</title>
    <style>
        /* CSS cho lịch */
        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            grid-gap: 5px;
            max-width: 800px;
            margin: 0 auto;
        }

        .calendar-header,
        .calendar-day {
            text-align: center;
            padding: 10px;
            border: 1px solid #ccc;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background-color: #f4f4f4;
        }

        .calendar-header .nav-buttons {
            display: flex;
            gap: 10px;
        }

        .calendar-header .prev-next-btn {
            cursor: pointer;
            background-color: #fff;
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 1.2em;
            border-radius: 50%;
        }

        .calendar-header .month-year {
            font-weight: bold;
            font-size: 1.5em;
        }

        /* Tô màu ngày hiện tại */
        .calendar-day.today {
            background-color: #F2CDAC;
        }

        /* Phần tháng-năm và điều hướng nằm trên cùng */
        .month-year {
            font-weight: bold;
            font-size: 1.5em;
        }

        /* Các nút Previous, Today, Next */
        .nav-buttons {
            display: flex;
            gap: 10px;
        }

        .prev-next-btn {
            cursor: pointer;
            background-color: #fff;
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 1.2em;
            border-radius: 50%;
        }
        .calendar-day {
            text-align: center;
            padding: 15px;
            border: 1px solid #ccc;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .calendar-day:hover {
            background-color: #f0f0f0;
        }

        .calendar-day.selected {
            background-color: #2196f3;
            color: white;
        }

        .event-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .event-modal-content {
            background: white;
            padding: 20px;
            border-radius: 5px;
            width: 300px;
        }

        .event-modal-content input,
        .event-modal-content textarea {
            width: 100%;
            margin-bottom: 10px;
        }

        .close-btn {
            background: #f44336;
            color: white;
            padding: 5px;
            border: none;
            cursor: pointer;
        }

    </style>
</head>

<body>

    <h1 style="text-align:center;">Calendar</h1>

    <div id="calendar" class="calendar">
        <!-- Lịch sẽ được render ở đây -->
    </div>
    <!-- Modal để thêm sự kiện -->
    <div id="event-modal" class="event-modal">
        <div class="event-modal-content">
            <h3>Add Event</h3>
            <input type="text" id="event-title" placeholder="Event Title" />
            <textarea id="event-description" placeholder="Event Description"></textarea>
            <button id="save-event">Save Event</button>
            <button class="close-btn" id="close-modal">Close</button>
        </div>
    </div>

    <script>
        // JavaScript để hiển thị lịch và xử lý sự kiện

        const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        const daysOfWeek = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        let currentDate = new Date();

        function renderCalendar(month, year) {
            const calendar = document.getElementById('calendar');
            calendar.innerHTML = ''; // Clear previous calendar

            // Create the calendar header with month and year
            const header = document.createElement('div');
            header.classList.add('calendar-header');

            const monthYear = document.createElement('div');
            monthYear.textContent = `${months[month]} ${year}`;
            monthYear.classList.add('month-year');
            header.appendChild(monthYear);

            // Add Previous and Next buttons
            const navButtons = document.createElement('div');
            navButtons.classList.add('nav-buttons');
            const prevBtn = document.createElement('button');
            prevBtn.textContent = '<';
            prevBtn.onclick = () => {
                currentDate.setMonth(currentDate.getMonth() - 1);
                renderCalendar(currentDate.getMonth(), currentDate.getFullYear());
            };
            header.appendChild(prevBtn);

            const nextBtn = document.createElement('button');
            nextBtn.textContent = '>';
            nextBtn.onclick = () => {
                currentDate.setMonth(currentDate.getMonth() + 1);
                renderCalendar(currentDate.getMonth(), currentDate.getFullYear());
            };
            header.appendChild(nextBtn);
            // Add Today button
            const todayBtn = document.createElement('button');
            todayBtn.textContent = 'Today';
            todayBtn.classList.add('prev-next-btn');
            todayBtn.onclick = () => {
                currentDate = new Date();  // Reset to today's date
                renderCalendar(currentDate.getMonth(), currentDate.getFullYear());
            };
            navButtons.appendChild(todayBtn);

            header.appendChild(navButtons);

            calendar.appendChild(header);

            // Create the day names row
            daysOfWeek.forEach(day => {
                const dayHeader = document.createElement('div');
                dayHeader.classList.add('calendar-header');
                dayHeader.textContent = day;
                calendar.appendChild(dayHeader);
            });

            // Calculate the first day of the month and number of days in the month
            const firstDay = new Date(year, month).getDay();
            const daysInMonth = new Date(year, month + 1, 0).getDate();

            // Add empty cells for days before the first day of the month
            for (let i = 0; i < firstDay; i++) {
                const emptyCell = document.createElement('div');
                emptyCell.classList.add('calendar-day');
                calendar.appendChild(emptyCell);
            }

            // Add day cells
            for (let day = 1; day <= daysInMonth; day++) {
                const dayCell = document.createElement('div');
                dayCell.classList.add('calendar-day');
                dayCell.textContent = day;

                // Mark today's date
                const today = new Date();
                if (today.getDate() === day && today.getMonth() === month && today.getFullYear() === year) {
                    dayCell.classList.add('today');
                }

                dayCell.onclick = () => openEventModal(day, month, year);
                calendar.appendChild(dayCell);
            }
        }

        function openEventModal(day, month, year) {
            const modal = document.getElementById('event-modal');
            modal.style.display = 'flex';

            const saveBtn = document.getElementById('save-event');
            saveBtn.onclick = () => saveEvent(day, month, year);
        }

        function saveEvent(day, month, year) {
            const title = document.getElementById('event-title').value;
            const description = document.getElementById('event-description').value;

            // Save event (you can store it in an array or a database if needed)
            console.log(`Event saved: ${title} on ${day}/${month + 1}/${year}`);

            // Close modal and reset input fields
            const modal = document.getElementById('event-modal');
            modal.style.display = 'none';
            document.getElementById('event-title').value = '';
            document.getElementById('event-description').value = '';
        }

        // Close the modal when the close button is clicked
        document.getElementById('close-modal').onclick = () => {
            document.getElementById('event-modal').style.display = 'none';
        };

        // Render the current month calendar
        renderCalendar(currentDate.getMonth(), currentDate.getFullYear());

    </script>

</body>

</html>

 *@
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar</title>
    <style>
        /* CSS cho lịch */
        .calendar-container {
            max-width: 800px;
            margin: 0 auto;
            text-align: center;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background-color: #f4f4f4;
        }

        .calendar-header .month-year {
            font-weight: bold;
            font-size: 1.5em;
        }

        .calendar-header .nav-buttons {
            display: flex;
            gap: 10px;
        }

        .calendar-header .prev-next-btn {
            cursor: pointer;
            background-color: #fff;
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 1.2em;
            border-radius: 50%;
        }

        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            grid-gap: 5px;
            border: 1px solid #ccc;
            margin-top: 10px;
        }

        .calendar-day {
            text-align: center;
            padding: 15px;
            border: 1px solid #ccc;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .calendar-day:hover {
            background-color: #f0f0f0;
        }

        .calendar-day.selected {
            background-color: #2196f3;
            color: white;
        }

        /* Tô màu ngày hiện tại */
        .calendar-day.today {
            background-color: #F2CDAC;
        }

        .event-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .event-modal-content {
            background: white;
            padding: 20px;
            border-radius: 5px;
            width: 300px;
        }

        .event-modal-content input,
        .event-modal-content textarea {
            width: 100%;
            margin-bottom: 10px;
        }

        .close-btn {
            background: #f44336;
            color: white;
            padding: 5px;
            border: none;
            cursor: pointer;
        }
    </style>
</head>

<body>

    <h1 style="text-align:center;">Calendar</h1>

    <div class="calendar-container">
        <!-- Calendar Header -->
        <div class="calendar-header">
            <div class="month-year" id="month-year"></div>
            <div class="nav-buttons">
                <button class="prev-next-btn" id="prev-btn">&lt;</button>
                <button class="prev-next-btn" id="next-btn">&gt;</button>
                <button class="prev-next-btn" id="today-btn">Today</button>
            </div>
        </div>

        <!-- Lịch sẽ được render ở đây -->
        <div id="calendar" class="calendar"></div>
    </div>

    <!-- Modal để thêm sự kiện -->
    <div id="event-modal" class="event-modal">
        <div class="event-modal-content">
            <h3>Add Event</h3>
            <input type="text" id="event-title" placeholder="Event Title" />
            <textarea id="event-description" placeholder="Event Description"></textarea>
            <button id="save-event">Save Event</button>
            <button class="close-btn" id="close-modal">Close</button>
        </div>
    </div>

    <script>
        const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        const daysOfWeek = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        let currentDate = new Date();

        // Hiển thị lịch tháng hiện tại
        function renderCalendar(month, year) {
            const calendar = document.getElementById('calendar');
            calendar.innerHTML = ''; // Clear previous calendar

            // Hiển thị tháng-năm trên header
            const monthYear = document.getElementById('month-year');
            monthYear.textContent = `${months[month]} ${year}`;

            // Calculate the first day of the month and number of days in the month
            const firstDay = new Date(year, month).getDay();
            const daysInMonth = new Date(year, month + 1, 0).getDate();

            // Create the day names row
            daysOfWeek.forEach(day => {
                const dayHeader = document.createElement('div');
                dayHeader.classList.add('calendar-day');
                dayHeader.textContent = day;
                calendar.appendChild(dayHeader);
            });

            // Add empty cells for days before the first day of the month
            for (let i = 0; i < firstDay; i++) {
                const emptyCell = document.createElement('div');
                emptyCell.classList.add('calendar-day');
                calendar.appendChild(emptyCell);
            }

            // Add day cells
            for (let day = 1; day <= daysInMonth; day++) {
                const dayCell = document.createElement('div');
                dayCell.classList.add('calendar-day');
                dayCell.textContent = day;

                // Mark today's date
                const today = new Date();
                if (today.getDate() === day && today.getMonth() === month && today.getFullYear() === year) {
                    dayCell.classList.add('today');
                }

                dayCell.onclick = () => openEventModal(day, month, year);
                calendar.appendChild(dayCell);
            }
        }

        function openEventModal(day, month, year) {
            const modal = document.getElementById('event-modal');
            modal.style.display = 'flex';

            const saveBtn = document.getElementById('save-event');
            saveBtn.onclick = () => saveEvent(day, month, year);
        }

        function saveEvent(day, month, year) {
            const title = document.getElementById('event-title').value;
            const description = document.getElementById('event-description').value;

            // Save event (you can store it in an array or a database if needed)
            console.log(`Event saved: ${title} on ${day}/${month + 1}/${year}`);

            // Close modal and reset input fields
            const modal = document.getElementById('event-modal');
            modal.style.display = 'none';
            document.getElementById('event-title').value = '';
            document.getElementById('event-description').value = '';
        }

        // Close the modal when the close button is clicked
        document.getElementById('close-modal').onclick = () => {
            document.getElementById('event-modal').style.display = 'none';
        };

        // Render the current month calendar
        renderCalendar(currentDate.getMonth(), currentDate.getFullYear());

        // Add event listeners for navigation buttons
        document.getElementById('prev-btn').onclick = () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            renderCalendar(currentDate.getMonth(), currentDate.getFullYear());
        };

        document.getElementById('next-btn').onclick = () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar(currentDate.getMonth(), currentDate.getFullYear());
        };

        document.getElementById('today-btn').onclick = () => {
            currentDate = new Date();  // Reset to today's date
            renderCalendar(currentDate.getMonth(), currentDate.getFullYear());
        };
    </script>

</body>

</html>
